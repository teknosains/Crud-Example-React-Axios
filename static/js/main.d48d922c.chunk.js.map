{"version":3,"sources":["Home.js","App.js","index.js"],"names":["stateReducer","state","action","type","users","isLoading","isAddUser","push","newUser","Home","props","console","log","useReducer","isError","dispatch","fetchUsers","a","axios","get","data","length","addUser","randomize","Math","floor","random","id","username","email","phone","updateUser","alert","deleteUser","userId","style","width","marginLeft","marginTop","onClick","float","backgroundColor","borderColor","border","padding","map","item","index","href","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"0QAGA,SAASA,EAAaC,EAAOC,GAC3B,OAAQA,EAAOC,MACb,IAAK,YACH,OAAO,2BACFF,GADL,IAEEG,MAAO,GACPC,WAAW,IAEf,IAAK,cACH,OAAO,2BACFJ,GADL,IAEEG,MAAOF,EAAOE,MACdC,WAAW,IAEf,IAAK,WACH,OAAO,2BACFJ,GADL,IAEEK,WAAW,IAEf,IAAK,kBACH,OAAO,2BACFL,GADL,IAEEK,WAAW,IAEf,IAAK,gBACH,IAAIF,EAAK,YAAOH,EAAMG,OAEtB,OADAA,EAAMG,KAAKL,EAAOM,SACX,2BACFP,GADL,IAEEK,WAAW,EACXF,MAAOA,IAEX,QACE,OAAOH,GAKb,IA+GeQ,EA/GF,SAACC,GACZC,QAAQC,IAAI,eAEZ,IAHsB,EAWIC,qBAAWb,EARnB,CAChBI,MAAO,GACPC,WAAW,EACXS,SAAS,EACTR,WAAW,EACXE,QAAS,KARW,mBAWfP,EAXe,KAWRc,EAXQ,KAahBC,EAAU,uCAAG,4BAAAC,EAAA,6DACjBF,EAAS,CAAEZ,KAAM,cADA,SAECe,IAAMC,IAAI,0CAFX,QAEbf,EAFa,QAKPgB,KAAKC,QACbN,EAAS,CAAEZ,KAAM,cAAeC,MAAOA,EAAMgB,OAN9B,2CAAH,qDAWVE,EAAO,uCAAG,8BAAAL,EAAA,sDACdN,QAAQC,IAAI,aAERW,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAE5BlB,EAAU,CACZmB,GAAIJ,EACJK,SAAS,WAAD,OAAaL,GACrBM,MAAM,GAAD,OAAKN,EAAL,cACLO,MAAM,SAAD,OAAWP,IAElBR,EAAS,CAAEZ,KAAM,gBAAiBK,QAASA,IAX7B,2CAAH,qDAcPuB,EAAU,uCAAG,sBAAAd,EAAA,sDACjBe,MAAM,eADW,2CAAH,qDAMVC,EAAU,uCAAG,WAAOC,GAAP,SAAAjB,EAAA,sDACjBe,MAAM,eADW,2CAAH,sDAOhB,OACE,2BAAUG,MAAO,CAACC,MAAO,IAAKC,WAAY,IAAKC,UAAW,KAA1D,UACE,+CAEA,wBAAQC,QAASvB,EAAjB,SACGf,EAAMI,UAAY,UAAY,cAEjC,wBACE8B,MAAO,CAACK,MAAO,QAASC,gBAAiB,QAASC,YAAa,SAC/DH,QAAS,kBAAMxB,EAAS,CAAEZ,KAAM,cAFlC,sBAKA,uBAECF,EAAMK,WACL,uBAAM6B,MAAO,CAACQ,OAAQ,iBAAkBC,QAAS,IAAjD,UACE,6BAAI,+DACJ,uBACA,wBAAQL,QAASjB,EAAjB,kBACA,wBACEa,MAAO,CAACE,WAAY,GAAII,gBAAiB,MAAOC,YAAa,OAC7DH,QAAS,kBAAMxB,EAAS,CAAEZ,KAAM,qBAFlC,oBAKA,0BAKJ,kCACE,gCACE,+BACE,yCACA,0CACA,uCACA,uCACA,6CAGJ,gCACGF,EAAMG,MAAMiB,OAAS,GAAKpB,EAAMG,MAAMyC,KAAI,SAACC,EAAMC,GAAP,OACzC,+BACE,6BAAKD,EAAKnB,KACV,6BAAKmB,EAAKlB,WACV,6BAAKkB,EAAKjB,QACV,6BAAKiB,EAAKhB,QACV,+BACE,mBAAGkB,KAAK,KAAKT,QAASR,EAAtB,kBADF,YAGE,mBAAGiB,KAAK,KAAKT,QAAS,kBAAMN,EAAWa,EAAKnB,KAA5C,yBARKmB,EAAKnB,gBCrHXsB,EAZH,WAGV,OACE,cAAC,IAAMC,SAAP,UAEE,cAAC,EAAD,OCJNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d48d922c.chunk.js","sourcesContent":["import { useReducer, useState } from \"react\"\r\nimport axios from \"axios\";\r\n\r\nfunction stateReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'LOAD_DATA':\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        isLoading: true,\r\n      };\r\n    case 'DATA_LOADED':\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n        isLoading: false\r\n      };\r\n    case 'ADD_USER':\r\n      return {\r\n        ...state,\r\n        isAddUser: true\r\n      };\r\n    case 'CANCEL_ADD_USER':\r\n      return {\r\n        ...state,\r\n        isAddUser: false\r\n      };\r\n    case 'SAVE_ADD_USER':\r\n      let users = [...state.users]; // clone current users\r\n      users.push(action.newUser);\r\n      return {\r\n        ...state,\r\n        isAddUser: false,\r\n        users: users\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst Home = (props) => {\r\n  console.log('render home')\r\n  \r\n  const initState = {\r\n    users: [],\r\n    isLoading: false,\r\n    isError: false,\r\n    isAddUser: false,\r\n    newUser: {}\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(stateReducer, initState);\r\n\r\n  const fetchUsers = async () => {\r\n    dispatch({ type: 'LOAD_DATA' }); // set loading indicator\r\n    let users = await axios.get('https://fakestoreapi.com/users?limit=5');\r\n    \r\n    // set data users ke State\r\n    if (users.data.length) {\r\n      dispatch({ type: 'DATA_LOADED', users: users.data });\r\n    }\r\n\r\n  };\r\n\r\n  const addUser = async () => {\r\n    console.log('fake addd');\r\n\r\n    let randomize = Math.floor(Math.random() * 100);\r\n\r\n    let newUser = {\r\n      id: randomize,\r\n      username: `Username${randomize}`,\r\n      email: `${randomize}@gmail.com`,\r\n      phone: `081223${randomize}`\r\n    }\r\n    dispatch({ type: 'SAVE_ADD_USER', newUser: newUser});\r\n  };\r\n\r\n  const updateUser = async () => {\r\n    alert('Fake update');\r\n\r\n    // let update = axios.put(...)\r\n  };\r\n\r\n  const deleteUser = async (userId) => {\r\n    alert('Fake delete');\r\n\r\n    // let delete = axios.delete(...)\r\n  };\r\n\r\n\r\n  return (\r\n    <fieldset style={{width: 700, marginLeft: 300, marginTop: 100}}>\r\n      <legend>Welcome, </legend>\r\n\r\n      <button onClick={fetchUsers}>\r\n        {state.isLoading ? 'Loading' : 'Load Data'}\r\n      </button>\r\n      <button\r\n        style={{float: 'right', backgroundColor: 'green', borderColor: 'green'}} \r\n        onClick={() => dispatch({ type: 'ADD_USER' })}>\r\n        Add User\r\n      </button>\r\n      <hr />\r\n      {/** form add user */}\r\n      {state.isAddUser && (\r\n        <form style={{border: '1px solid #ddd', padding: 10}}>\r\n          <h5><i>Data random will be added...</i></h5>\r\n          <br />\r\n          <button onClick={addUser}>Save</button>\r\n          <button \r\n            style={{marginLeft: 20, backgroundColor: 'red', borderColor: 'red'}} \r\n            onClick={() => dispatch({ type: 'CANCEL_ADD_USER' })}>\r\n            Cancel\r\n          </button>\r\n          <br />\r\n        </form>\r\n      )}\r\n\r\n      {/** Table list user */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User ID</th>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.users.length > 0 && state.users.map((item, index) => \r\n            <tr key={item.id}>\r\n              <td>{item.id}</td>\r\n              <td>{item.username}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.phone}</td>\r\n              <td>\r\n                <a href=\"#!\" onClick={updateUser}>Edit</a>\r\n                &nbsp;|&nbsp;\r\n                <a href=\"#!\" onClick={() => deleteUser(item.id)}>Delete</a>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </fieldset>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useReducer, useState } from 'react'\r\n\r\nimport Home from './Home.js';\r\n\r\nconst App = () => {\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    \r\n      <Home />\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App","\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}